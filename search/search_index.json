{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introducci\u00f3n","text":"<p>\u00a1Bienvenido/a a nuestra workshop!</p> <p>En esta workshop recorreremos las funcionalidades de Docling. Una librer\u00eda de Python de c\u00f3digo abierto para la conversi\u00f3n de documentos de varios formatos a otros m\u00e1s \u00fatiles para aplicaciones de IA, preservando su contenido y estructura originales.</p> <p>Al finalizar esta workshop, ser\u00e1s capaz de:</p> <ul> <li>Convertir documentos complejos a distintos formatos adecuados para IA.</li> <li>Comprender los distintos m\u00e9todos de Chunking y c\u00f3mo utilizarlos.</li> <li>Crear una aplicaci\u00f3n RAG multimodal, transparente y verificable.</li> </ul> <p></p>"},{"location":"#agenda","title":"Agenda","text":"Preparaci\u00f3n Instrucciones de como preparar tu entorno para los labs Lab 1: Conversi\u00f3n de documentos con Docling Aprende a usar Docling para convertir documentos complejos Lab 2: Chunking y vectorizaci\u00f3n con Docling Descubre las estrategias de chunking avanzado con Docling Lab 3: RAG multimodal con Docling Construcci\u00f3n de un sistema RAG multimodal verificable"},{"location":"#tecnologia-utilizada","title":"Tecnolog\u00eda utilizada","text":"<p>Algunas de las tecnolog\u00edas y herramientas que utilizaremos en esta workshop:</p> <ul> <li>Google Colab</li> <li>Docling</li> <li>Jupyter notebooks</li> <li>LangChain</li> <li>Replicate</li> <li>Modelos fundacionales IBM Granite de IA</li> </ul>"},{"location":"#ponentes","title":"Ponentes","text":"<p>Contacto y perfiles de los ponentes:</p> <ul> <li>Sim\u00f3n S\u00e1nchez Viloria* </li> <li>Andres Ruiz Calvo* </li> </ul> <p>Basado en la workshop original de ibm-granite-community : https://github.com/ibm-granite-community/docling-workshop </p> <p>(*) Las opiniones expresadas por estas personas durante la workshop son personales y no representan necesariamente las de IBM.</p>"},{"location":"lab-1/","title":"Conversi\u00f3n de documentos con Docling","text":"<p>El prop\u00f3sito principal de Docling es la conversi\u00f3n de documentos. Docling nos permite convertir documentos en diversos formatos a otros m\u00e1s \u00fatiles para aplicaciones de IA, preservando la estructura y contenido del documento.</p> <p>En este laboratorio revisaremos las distintas opciones de conversi\u00f3n que ofrece Docling, as\u00ed como algunas funcionalidades de enriquecimiento. Tambi\u00e9n exploraremos los documentos convertidos para ver c\u00f3mo Docling almacena metadatos y preserva la estructura.</p>"},{"location":"lab-1/#prerrequisitos","title":"Prerrequisitos","text":"<p>Este laboratorio es un notebook de Jupyter. Sigue las instrucciones del trabajo previo para ejecutarlo.</p>"},{"location":"lab-1/#lab","title":"Lab","text":"<p>Para ejecutar el notebook desde la l\u00ednea de comandos en Jupyter usando el entorno virtual activo del trabajo previo, ejecuta:</p> <pre><code>jupyter notebook notebooks/Lab1_Docling_convert.ipynb\n</code></pre> <p>La ruta del notebook anterior es relativa a la carpeta <code>docling-workshop</code> del repositorio de git clonado durante la secci\u00f3n de preparaci\u00f3n.</p>"},{"location":"lab-2/","title":"Chunking con Docling","text":"<p>El chunking es el proceso de dividir textos largos en fragmentos m\u00e1s peque\u00f1os y manejables antes de pasarlos a un modelo. Es un paso importante porque los modelos tienen una longitud m\u00e1xima de contexto, y el chunking se asegura que la informaci\u00f3n relevante quepa en ese l\u00edmite, preservando la coherencia, mejorando la recuperaci\u00f3n y evitando la p\u00e9rdida de contenido importante durante el procesamiento.</p> <p>En este laboratorio exploraremos la importancia del chunking y las capacidades que ofrece Docling para crear fragmentos de texto adecuados a la estructura y sem\u00e1ntica del documento.</p> <p>Lee m\u00e1s sobre las distintas opciones de chunking en la documentaci\u00f3n de Docling.</p>"},{"location":"lab-2/#prerrequisitos","title":"Prerrequisitos","text":"<p>Este laboratorio es un notebook de Jupyter. Sigue las instrucciones del trabajo previo para ejecutarlo.</p>"},{"location":"lab-2/#lab","title":"Lab","text":"<p>Para ejecutar el notebook desde la l\u00ednea de comandos en Jupyter usando el entorno virtual activo del trabajo previo, ejecuta:</p> <pre><code>jupyter notebook notebooks/Lab2_Hybrid_Chunking.ipynb\n</code></pre> <p>La ruta del notebook anterior es relativa a la carpeta <code>docling-workshop</code> del repositorio de git clonado durante la secci\u00f3n de preparaci\u00f3n.</p>"},{"location":"lab-3/","title":"RAG multimodal con Docling","text":"<p>Retrieval Augmented Generation (RAG) es un patr\u00f3n de aplicaciones de IA que puede utilizarse para mejorar el rendimiento de los modelos de lenguaje recuperando informaci\u00f3n factual de una base de conocimiento y a\u00f1adi\u00e9ndola a la consulta del modelo.</p> <p>En este laboratorio combinaremos las habilidades aprendidas en los dos laboratorios anteriores para construir un sistema RAG potenciado con Docling.</p>"},{"location":"lab-3/#prerrequisitos","title":"Prerrequisitos","text":"<p>Este laboratorio es un notebook de Jupyter. Sigue las instrucciones del trabajo previo para ejecutarlo.</p>"},{"location":"lab-3/#lab","title":"Lab","text":"<p>Para ejecutar el notebook desde la l\u00ednea de comandos en Jupyter usando el entorno virtual activo del trabajo previo, ejecuta:</p> <pre><code>jupyter notebook notebooks/Lab3_RAG.ipynb\n</code></pre> <p>La ruta del notebook anterior es relativa a la carpeta <code>docling-workshop</code> del repositorio de git clonado durante la secci\u00f3n de preparaci\u00f3n.</p>"},{"location":"pre-work/","title":"Preparaci\u00f3n","text":"<p>Los laboratorios de la workshop son notebooks de Jupyter. Los notebooks pueden ejecutarse:   </p> <ul> <li>Localmente en tu equipo (para el cual necesitar\u00e1s instalar algunas dependencias) O</li> <li>De forma remota en Google Colab</li> </ul> <p>Sigue las instrucciones en una de las siguientes secciones seg\u00fan c\u00f3mo prefieras ejecutarlos.</p>"},{"location":"pre-work/#ejecucion-de-notebooks-localmente","title":"Ejecuci\u00f3n de notebooks localmente","text":"<p>Si quieres ejecutar los notebooks de los laboratorios localmente en tu ordenador, se recomienda contar con:</p> <ul> <li>Un ordenador o port\u00e1til: m\u00ednimo 8 GB de RAM (16 GB recomendado)</li> <li>Conocimientos de Git y Python: Lo suficiente para instalar dependencias y ejecutar Jupyter Notebooks</li> <li>(Opcional) Un IDE como VS Code o PyCharm para editar y ejecutar los notebooks comodamente.</li> </ul> <p>Si alguna de estas no es el caso, te recomendamos ir a la secci\u00f3n Ejecuci\u00f3n de notebooks de forma remota (Colab).</p> <p>Para ejecutar los notebooks de los laboratorios localmente en tu equipo, sigue estos pasos:</p> <ul> <li>Prerrequisitos locales</li> <li>Clonar el repositorio de la workshop</li> <li>Instalar Jupyter</li> </ul>"},{"location":"pre-work/#prerrequisitos-locales","title":"Prerrequisitos locales","text":"<ul> <li>Git</li> <li>Python 3.10, 3.11 o 3.12</li> </ul>"},{"location":"pre-work/#clonar-el-repositorio-de-la-workshop-de-docling","title":"Clonar el repositorio de la workshop de Docling","text":"<p>Clona el repositorio de la workshop y entra en el directorio del repositorio.</p> <pre><code>git clone https://github.com/simonsanvil/docling-workshop-pycones-2025\ncd docling-workshop-pycones-2025\n</code></pre>"},{"location":"pre-work/#instalar-jupyter","title":"Instalar Jupyter","text":"<p>Usa un entorno virtual</p> <p>Antes de instalar dependencias y para evitar conflictos en tu entorno, es aconsejable utilizar un entorno virtual (venv).</p> <ol> <li> <p>Crea un entorno virtual:</p> <pre><code>python3 -m venv --upgrade-deps --clear venv\n</code></pre> </li> <li> <p>Activa el entorno virtual ejecutando:</p> <pre><code>source venv/bin/activate\n</code></pre> </li> <li> <p>Instala Jupyter Notebook en el entorno virtual:</p> <pre><code>python3 -m pip install --require-virtualenv notebook ipywidgets\n</code></pre> <p>Para m\u00e1s informaci\u00f3n, consulta las instrucciones de instalaci\u00f3n de Jupyter.</p> </li> <li> <p>Para abrir un notebook en Jupyter (con el entorno virtual activo), ejecuta:</p> <pre><code>jupyter notebook &lt;notebook-file-path&gt;\n</code></pre> <p>Alternativamente, si tienes instalado VS Code, puedes habilitar la extensi\u00f3n de Jupyter Notebooks para VS Code (instrucciones aqu\u00ed) y abrir los notebooks directamente en VS Code.</p> </li> </ol>"},{"location":"pre-work/#uso-de-los-modelos-de-granite-con-replicate","title":"Uso de los modelos de Granite con Replicate","text":"<p>En el laboratorio 3 utilizaras modelos de IA generativa Granite para construir un sistema RAG multimodal. Para ello usaremos Replicate, una plataforma en la nube que aloja y sirve modelos de IA por ti.</p>"},{"location":"pre-work/#instrucciones-para-configurar-replicate","title":"Instrucciones para configurar Replicate","text":"<ol> <li> <p>Crea una cuenta en Replicate. Necesitar\u00e1s una cuenta de GitHub para hacerlo.</p> </li> <li> <p>A\u00f1ade saldo gratis a tu cuenta de Replicate: Para facilitar probar los modelos en Replicate, utiliza este enlace  para a\u00f1adir una peque\u00f1a cantidad de cr\u00e9dito a tu cuenta cortes\u00eda de la comunidad de IBM Granite .</p> </li> <li> <p>Crea un token de API de Replicate.</p> </li> <li> <p>Establece tu token de API de Replicate como una variable de entorno en la terminal donde vayas a ejecutar el notebook:</p> <pre><code>export REPLICATE_API_TOKEN=&lt;your_replicate_api_token&gt;\n</code></pre> </li> </ol>"},{"location":"pre-work/#ejecucion-de-notebooks-de-forma-remota-colab","title":"Ejecuci\u00f3n de notebooks de forma remota (Colab)","text":"<p>Para ejecutar los notebooks de los laboratorios de forma remota usando Google Colab, sigue estos pasos:</p> <ul> <li>Prerrequisitos de Colab</li> <li>Servir los modelos de Granite con Replicate</li> </ul> <p>Velocidad de ejecuci\u00f3n de notebooks en Colab</p> <p>En Colab, el runtime por defecto usa CPUs. Considera cambiar el tipo de entorno en Colab para aumentar la velocidad de ejecuci\u00f3n, especialmente si tienes otras limitaciones como una conexi\u00f3n lenta. En la barra de navegaci\u00f3n, selecciona <code>Runtime-&gt;Change runtime type</code> y elige aceleraci\u00f3n por GPU o TPU.</p>"},{"location":"pre-work/#prerrequisitos-de-colab","title":"Prerrequisitos de Colab","text":"<ul> <li>Google Colab requiere una cuenta de Google con la que hayas iniciado sesi\u00f3n.</li> </ul>"},{"location":"pre-work/#servir-los-modelos-de-granite-con-replicate","title":"Servir los modelos de Granite con Replicate","text":"<p>En el laboratorio 3 utilizaras modelos de IA generativa Granite para construir un sistema RAG multimodal. Para ello usaremos Replicate, una plataforma en la nube que aloja y sirve modelos de IA por ti.</p>"},{"location":"pre-work/#instrucciones-para-configurar-replicate_1","title":"Instrucciones para configurar Replicate","text":"<ol> <li> <p>Crea una cuenta en Replicate (necesitar\u00e1s una cuenta de GitHub).</p> </li> <li> <p>A\u00f1ade saldo gratis a tu cuenta de Replicate: Para facilitar probar los modelos Granite en Replicate, utiliza este enlace  para a\u00f1adir una peque\u00f1a cantidad de cr\u00e9dito a tu cuenta cortes\u00eda de la comunidad de IBM Granite .</p> </li> <li> <p>Crea un API token de Replicate.</p> </li> <li> <p>A\u00f1ade tu token de API de Replicate al gestor de secretos de Colab para guardarlo de forma segura. Abre Google Colab y haz clic en la pesta\u00f1a <code>\ud83d\udd11 Secrets</code> del panel izquierdo. Pulsa \"New Secret\" e introduce <code>REPLICATE_API_TOKEN</code> como clave; pega tu token en el campo de valor. Activa el bot\u00f3n de la izquierda para permitir que el notebook acceda al secreto.</p> </li> </ol>"}]}